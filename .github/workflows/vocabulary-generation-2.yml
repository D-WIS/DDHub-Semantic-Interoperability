name: Generate cleaned vocabulary
on: 
  # Allow manual execution
  workflow_dispatch:
    inputs:
      force_updates:
        description: 'Force updates of terms, even without changes to them'
        required: true
        default: 'false'
      force_deletion:
        decription: 'Force deletion of existing terms before updates'
        required: true
        default: 'false'
      application_password:
        description: 'Application password to use'
        required: false
        default: ''
  push: # push must be changed to trigger after md's have been generated (workflow trigger?)

jobs:
  generate_vocabulary:
    runs-on: windows-latest
    env:
      SOURCE_FOLDER: "${{ github.workspace }}\\docs\\vocabulary_development\\definitions"
      SCRIPT_PATH: "${{ github.workspace }}\\src\\DWISVocabularyDevelopment\\DWISVocabularyDevelopment\\DWISVocabularyDevelopment.Actions"
      DESTINATION_FOLDER: "${{ github.workspace }}\\docs\\vocabulary_development\\auto-generated"
      SCHEMA_FOLDER: "${{ github.workspace }}\\src\\DWISVocabularyDevelopment\\DWISVocabularyDevelopment\\DWIS.Vocabulary.Schemas"
      EXAMPLES_SOURCE_FOLDER: "${{ github.workspace }}\\docs\\vocabulary_development\\examples"
      PROJECTS_TO_PACK: "DWIS.Vocabulary.Development,DWIS.Vocabulary.OWL,DWIS.Vocabulary.Schemas,DWIS.Vocabulary.Utils"
      PACK_VERSION: "5"
      PACKAGE_OUTPUT_FOLDER: "${{ github.workspace }}\\temp\\src\\DWIS.Vocabulary.OPCUA\\LocalPackages"
      INCREMENT_VERSION: "true"
      

    
    steps:
      - uses: actions/checkout@v2
      - name: Overwrite appsettings.json
        run: |
          cd $Env:SCRIPT_PATH
          echo "Old appsettings.json"
          type .\appsettings.json
          echo ""
          echo "Changing appsettings.json..."
          $a = Get-Content 'appsettings.json' -raw | ConvertFrom-Json
          $a.ActionsConfig.SourceFolder="$Env:SOURCE_FOLDER"
          $a.ActionsConfig.DestinationFolder="$Env:DESTINATION_FOLDER"
          $a.ActionsConfig.SchemaFolder="$Env:SCHEMA_FOLDER"
          $a.ActionsConfig.ExamplesSourceFolder="$Env:EXAMPLES_SOURCE_FOLDER"
          $a.ActionsConfig.ProjectsToPack="$Env:PROJECTS_TO_PACK"
          $a.ActionsConfig.PackVersion="$Env:PACK_VERSION"
          $a.ActionsConfig.PackageOutputFolder="$Env:PACKAGE_OUTPUT_FOLDER"
          $a.ActionsConfig.IncrementVersion="$Env:INCREMENT_VERSION"
          $a | ConvertTo-Json -depth 32| set-content 'appsettings.json'
          echo ""
          echo "New appsettings.json"
          type .\appsettings.json


        
      - name: Run generation script
        timeout-minutes: 3
        run: |
          cd $Env:SCRIPT_PATH
          pwd
          dotnet restore
          dotnet run
      - name: Git Status
        run: |
          git status
      - name: 'Upload the generated files as artifacts'
        uses: actions/upload-artifact@v3
        with:
          name: generated-md-files
          path: "${{ github.workspace }}/docs/vocabulary_development/auto-generated/md"

  publish_vocabulary:
    runs-on: ubuntu-latest
    needs: generate_vocabulary
    env:
      SCRIPT_PATH: "${{ github.workspace }}/docs/vocabulary_development/scripts"
      SOURCE_PATH: "${{ github.workspace }}/docs/vocabulary_development/auto-generated/md"
      WORDPRESS_USER: "cicd"
      WORDPRESS_APPLICATION_PASSWORD: "${{ secrets.WORDPRESS_APPLICATION_PASSWORD }}"
      WORDPRESS_URL: "https://adams210.sg-host.com/"
      WORDPRESS_USE_REST_ROUTE: "true"
      FORCE_UPDATE: "false"
      FORCE_DELETION: "false"
    
    steps:
        # Override env variables with content from the Workflow Dispatch dialog
      - name: override-dispatch-variables
        if: ${{ github.event_name=='workflow_dispatch' }}
        run: |
          echo "FORCE_UPDATE=${{ github.event.inputs.force_updates }}" >> $GITHUB_ENV
          echo "FORCE_DELETION=${{ github.event.inputs.force_deletion }}" >> $GITHUB_ENV
          echo "WORDPRESS_APPLICATION_PASSWORD=${{ github.event.inputs.application_password }}" >> $GITHUB_ENV

      - uses: actions/checkout@v2

      - name: 'Download the generated files from artifacts'
        uses: actions/download-artifact@v3
        with:
          name: generated-md-files
          path: "${{ github.workspace }}/docs/vocabulary_development/auto-generated/md"

      - name: Extract Artifact
        run: |
          ls
          ls $SOURCE_PATH
          git status

      - name: Run publish script
        run: |
          cd $SCRIPT_PATH
          if [ -z "$WORDPRESS_APPLICATION_PASSWORD" ]
          then
            echo Application password not set, aborting without failure
            exit 0
          else
            pip install -r requirements.txt
            python update_web_vocabulary.py
          fi


      