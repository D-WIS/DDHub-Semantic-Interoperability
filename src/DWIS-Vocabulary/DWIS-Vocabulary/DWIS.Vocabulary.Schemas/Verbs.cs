using System;
namespace DWIS.Vocabulary.Schemas
{
public static class Verbs
{
public enum Enum
{
IsEnablingSignalFor = 1160708128,
IsActivatedSignalFor = 1570145478,
AllowEnablementSignalFor = 247029459,
IsIdlingSignalFor = 892349532,
IsUserControllableExtraMarginSignalFor = 1031799533,
IsUsedExtraMarginSignalFor = 437619451,
IsArmedSignalFor = 484145703,
IsAlertTriggeredSignalFor = 569757279,
IsAlarmTriggeredSignalFor = 1439555769,
IsInSafeModeSignalFor = 1840654096,
IsImpactDescriptionSignalFor = 1267710810,
IsFeatureSignalFor = 1707293354,
IsRecommendedBy = 1913818768,
IsRecommendedFor = 521812941,
HasControlLimit = 603762690,
IsCharacterizedBy = 202932082,
HasOperationalStep = 1013334718,
IsAnActionOf = 1148069938,
IsATaskOf = 1849897168,
IsAContextOf = 221343018,
IsDependentOn = 444304782,
IsObservableFrom = 998582492,
HasPressureReference = 89379082,
HasTemperatureReference = 260235461,
HasElevationReference = 52895028,
Controls = 1859740551,
HasFunction = 1055596175,
IsCommandFor = 126256724,
IsComputationInput = 1689021559,
IsLimitFor = 1139365231,
IsMinimumLimitFor = 1116571004,
IsMaximumLimitFor = 1908407450,
IsCurrentStateFor = 1823888719,
IsInformationForCurrentStateOf = 76507908,
IsInSafeModeStateFor = 1859559459,
IsSetPointFor = 1310941472,
IsSetPointRecommendationFor = 67358738,
IsSetPointAdviceFor = 1169797708,
IsSetPointMinimumRecommendationFor = 239954693,
IsSetPointMinimumAdviceFor = 649101772,
IsSetPointMaximumRecommendationFor = 1447257406,
IsSetPointMaximumAdviceFor = 1123973610,
IsTransformationInput = 2047569715,
IsBufferingInput = 221037521,
IsDerivationInput = 2115923890,
IsResamplingInput = 1177636674,
IsTransmissionInput = 1785737051,
IsGeneratedBy = 1158506360,
IsComputedBy = 636145701,
IsMeasuredBy = 441920456,
IsRecordedFrom = 1158989545,
IsTransformationOutput = 883472782,
IsBufferingOutput = 277559844,
IsDerivedFrom = 382904578,
IsIntegratedFrom = 1038467200,
IsResampledBy = 1295679710,
IsTransmissionOutput = 2037837292,
IsProcessedBy = 879509124,
IsProvidedBy = 1021939487,
IsProvidedTo = 406794948,
IsTransmittedBy = 1387985143,
IsConditionedBy = 780652777,
IsConditionInput = 529575146,
IsConditionLeft = 1008282320,
IsConditionRight = 910637878,
IsValidBy = 752728927,
HasDomain = 1140482556,
HasTimeIntervalDomain = 1602918622,
HasValue = 1027773190,
HasDynamicValue = 4715289,
HasStaticValue = 1527834787,
IsToBeComparedWith = 1437098394,
IsToBeGreaterThan = 212185020,
IsToBeGreaterOrEqualThan = 1054012621,
IsToBeStrictlyGreaterThan = 1129340756,
IsToBeSmallerThan = 950239773,
IsToBeSmallerOrEqualThan = 2007173393,
IsToBeStrictlySmallerThan = 676713764,
IsToBeEqualTo = 370169534,
IsToBeDifferentFrom = 2094439199,
IsSubPartOf = 1712364150,
AccountsFor = 706491468,
IsRelatedToDrillingIncident = 814413566,
ManagesIncident = 1289622252,
IsRelatedToDrillingLimit = 1922585957,
ImplementsLimit = 2044653798,
IsRelatedToDrillingObjective = 1677478835,
ImplementsObjective = 488303352,
IsRelatedToDrillingProcedure = 84134882,
ImplementsProcedure = 1578464282,
DWISVerb = 1040551215,
BelongsToClass = 614636866,
HasEndPoint = 465635962,
HasPressureReferenceType = 1956339747,
EndsHydraulicBranchDecomposition = 769561585,
IsAHydraulicRepresentationFor = 1432158043,
HasBranchComponent = 932066696,
HasBranchCoordinateSystem = 1458013667,
HasHydraulicState = 236912632,
HasHydraulicStateValueFrom = 1422564797,
HasLeftBranchCoordinates = 667297594,
HasRightBranchCoordinates = 1800330970,
IsHydraulicallyLocatedAt = 1110237149,
IsEquivalentCirculationDensityAt = 1494010328,
IsFluidDensityAt = 1155227739,
IsFluidTemperatureAt = 1628530709,
IsFluidVelocityAt = 1804548763,
IsOpeningRatioAt = 1225315653,
IsVolumeAt = 2014092619,
IsHydraulicEstimationAt = 826943945,
IsHydraulicMaximumAllowedRateOfChangeAt = 532712682,
IsHydraulicMaximumAllowedValueAt = 491980884,
IsHydraulicMeasurementAt = 1939942215,
IsMassFlowRateAt = 1284189062,
IsPressureAt = 1882769747,
IsPressureGradientAt = 1669598404,
IsVolumetricFlowRateAt = 583303202,
IsHydraulicConnectedTo = 184567530,
HasEndJunction = 1334338765,
HasLeftBranch = 1291443591,
HasRightBranch = 1110967905,
HasStartJunction = 1996898034,
StartsHydraulicBranchDecomposition = 1558107710,
ConcernsAFluidComponent = 1829277139,
IsUpstreamOf = 1489553875,
IsDownstreamOf = 799800393,
IsOfMechanicalStiffnessType = 1628450473,
IsAMechanicalRepresentationFor = 1670831170,
HasMechanicalState = 150978200,
HasMechanicalStateValueFrom = 113210430,
IsMechanicallyConnectedTo = 897910806,
IsMechanicallyLocatedAt = 804081088,
IsForMotionType = 136647106,
HasMotionType = 810051546,
HasCoordinates = 1336564019,
HasReferenceFrame = 2086481624,
HasReferenceFrameOrigin = 1033468211,
IsPhysicallyLocatedAt = 116632010,
AssociatesMeasurableQuantity = 1267717486,
AssociatesUnit = 1431049866,
HasUnitAssociation = 734131970,
HasMeasurableQuantity = 1566983441,
IsOfBaseQuantity = 1334630484,
IsOfMeasurableQuantity = 771494116,
IsUnitForQuantity = 974881151,
HasSIUnit = 1948555961,
HasUnitOfMeasure = 150414946,
BelongsToSynchronizationGroup = 2143354037,
HasAcquisitionClock = 1977175045,
HasSourceClock = 664560596,
HasSourceTime = 1406457251,
HasAcquisitionTime = 883408549,
HasTransmissionDelay = 972312034,
IsSynchronizationGroupInput = 780300264,
IsSynchronizationGroupOutput = 59421817,
HasTimeReference = 612620623,
HasUncertainty = 69666730,
HasUncertaintyAccuracy = 1709719709,
HasUncertaintyPrecision = 1483158390,
HasUncertaintyMin = 48937244,
HasUncertaintyMax = 722734847,
HasUncertaintyMean = 2145996872,
HasUncertaintyStandardDeviation = 1028307523,
HasProportionError = 1747291041,
HasFullScale = 1519713409,
HasUncertaintyHistogram = 17573535
}
	public const string IsEnablingSignalFor = "IsEnablingSignalFor";
	public const string IsActivatedSignalFor = "IsActivatedSignalFor";
	public const string AllowEnablementSignalFor = "AllowEnablementSignalFor";
	public const string IsIdlingSignalFor = "IsIdlingSignalFor";
	public const string IsUserControllableExtraMarginSignalFor = "IsUserControllableExtraMarginSignalFor";
	public const string IsUsedExtraMarginSignalFor = "IsUsedExtraMarginSignalFor";
	public const string IsArmedSignalFor = "IsArmedSignalFor";
	public const string IsAlertTriggeredSignalFor = "IsAlertTriggeredSignalFor";
	public const string IsAlarmTriggeredSignalFor = "IsAlarmTriggeredSignalFor";
	public const string IsInSafeModeSignalFor = "IsInSafeModeSignalFor";
	public const string IsImpactDescriptionSignalFor = "IsImpactDescriptionSignalFor";
	public const string IsFeatureSignalFor = "IsFeatureSignalFor";
	public const string IsRecommendedBy = "IsRecommendedBy";
	public const string IsRecommendedFor = "IsRecommendedFor";
	public const string HasControlLimit = "HasControlLimit";
	public const string IsCharacterizedBy = "IsCharacterizedBy";
	public const string HasOperationalStep = "HasOperationalStep";
	public const string IsAnActionOf = "IsAnActionOf";
	public const string IsATaskOf = "IsATaskOf";
	public const string IsAContextOf = "IsAContextOf";
	public const string IsDependentOn = "IsDependentOn";
	public const string IsObservableFrom = "IsObservableFrom";
	public const string HasPressureReference = "HasPressureReference";
	public const string HasTemperatureReference = "HasTemperatureReference";
	public const string HasElevationReference = "HasElevationReference";
	public const string Controls = "Controls";
	public const string HasFunction = "HasFunction";
	public const string IsCommandFor = "IsCommandFor";
	public const string IsComputationInput = "IsComputationInput";
	public const string IsLimitFor = "IsLimitFor";
	public const string IsMinimumLimitFor = "IsMinimumLimitFor";
	public const string IsMaximumLimitFor = "IsMaximumLimitFor";
	public const string IsCurrentStateFor = "IsCurrentStateFor";
	public const string IsInformationForCurrentStateOf = "IsInformationForCurrentStateOf";
	public const string IsInSafeModeStateFor = "IsInSafeModeStateFor";
	public const string IsSetPointFor = "IsSetPointFor";
	public const string IsSetPointRecommendationFor = "IsSetPointRecommendationFor";
	public const string IsSetPointAdviceFor = "IsSetPointAdviceFor";
	public const string IsSetPointMinimumRecommendationFor = "IsSetPointMinimumRecommendationFor";
	public const string IsSetPointMinimumAdviceFor = "IsSetPointMinimumAdviceFor";
	public const string IsSetPointMaximumRecommendationFor = "IsSetPointMaximumRecommendationFor";
	public const string IsSetPointMaximumAdviceFor = "IsSetPointMaximumAdviceFor";
	public const string IsTransformationInput = "IsTransformationInput";
	public const string IsBufferingInput = "IsBufferingInput";
	public const string IsDerivationInput = "IsDerivationInput";
	public const string IsResamplingInput = "IsResamplingInput";
	public const string IsTransmissionInput = "IsTransmissionInput";
	public const string IsGeneratedBy = "IsGeneratedBy";
	public const string IsComputedBy = "IsComputedBy";
	public const string IsMeasuredBy = "IsMeasuredBy";
	public const string IsRecordedFrom = "IsRecordedFrom";
	public const string IsTransformationOutput = "IsTransformationOutput";
	public const string IsBufferingOutput = "IsBufferingOutput";
	public const string IsDerivedFrom = "IsDerivedFrom";
	public const string IsIntegratedFrom = "IsIntegratedFrom";
	public const string IsResampledBy = "IsResampledBy";
	public const string IsTransmissionOutput = "IsTransmissionOutput";
	public const string IsProcessedBy = "IsProcessedBy";
	public const string IsProvidedBy = "IsProvidedBy";
	public const string IsProvidedTo = "IsProvidedTo";
	public const string IsTransmittedBy = "IsTransmittedBy";
	public const string IsConditionedBy = "IsConditionedBy";
	public const string IsConditionInput = "IsConditionInput";
	public const string IsConditionLeft = "IsConditionLeft";
	public const string IsConditionRight = "IsConditionRight";
	public const string IsValidBy = "IsValidBy";
	public const string HasDomain = "HasDomain";
	public const string HasTimeIntervalDomain = "HasTimeIntervalDomain";
	public const string HasValue = "HasValue";
	public const string HasDynamicValue = "HasDynamicValue";
	public const string HasStaticValue = "HasStaticValue";
	public const string IsToBeComparedWith = "IsToBeComparedWith";
	public const string IsToBeGreaterThan = "IsToBeGreaterThan";
	public const string IsToBeGreaterOrEqualThan = "IsToBeGreaterOrEqualThan";
	public const string IsToBeStrictlyGreaterThan = "IsToBeStrictlyGreaterThan";
	public const string IsToBeSmallerThan = "IsToBeSmallerThan";
	public const string IsToBeSmallerOrEqualThan = "IsToBeSmallerOrEqualThan";
	public const string IsToBeStrictlySmallerThan = "IsToBeStrictlySmallerThan";
	public const string IsToBeEqualTo = "IsToBeEqualTo";
	public const string IsToBeDifferentFrom = "IsToBeDifferentFrom";
	public const string IsSubPartOf = "IsSubPartOf";
	public const string AccountsFor = "AccountsFor";
	public const string IsRelatedToDrillingIncident = "IsRelatedToDrillingIncident";
	public const string ManagesIncident = "ManagesIncident";
	public const string IsRelatedToDrillingLimit = "IsRelatedToDrillingLimit";
	public const string ImplementsLimit = "ImplementsLimit";
	public const string IsRelatedToDrillingObjective = "IsRelatedToDrillingObjective";
	public const string ImplementsObjective = "ImplementsObjective";
	public const string IsRelatedToDrillingProcedure = "IsRelatedToDrillingProcedure";
	public const string ImplementsProcedure = "ImplementsProcedure";
	public const string DWISVerb = "DWISVerb";
	public const string BelongsToClass = "BelongsToClass";
	public const string HasEndPoint = "HasEndPoint";
	public const string HasPressureReferenceType = "HasPressureReferenceType";
	public const string EndsHydraulicBranchDecomposition = "EndsHydraulicBranchDecomposition";
	public const string IsAHydraulicRepresentationFor = "IsAHydraulicRepresentationFor";
	public const string HasBranchComponent = "HasBranchComponent";
	public const string HasBranchCoordinateSystem = "HasBranchCoordinateSystem";
	public const string HasHydraulicState = "HasHydraulicState";
	public const string HasHydraulicStateValueFrom = "HasHydraulicStateValueFrom";
	public const string HasLeftBranchCoordinates = "HasLeftBranchCoordinates";
	public const string HasRightBranchCoordinates = "HasRightBranchCoordinates";
	public const string IsHydraulicallyLocatedAt = "IsHydraulicallyLocatedAt";
	public const string IsEquivalentCirculationDensityAt = "IsEquivalentCirculationDensityAt";
	public const string IsFluidDensityAt = "IsFluidDensityAt";
	public const string IsFluidTemperatureAt = "IsFluidTemperatureAt";
	public const string IsFluidVelocityAt = "IsFluidVelocityAt";
	public const string IsOpeningRatioAt = "IsOpeningRatioAt";
	public const string IsVolumeAt = "IsVolumeAt";
	public const string IsHydraulicEstimationAt = "IsHydraulicEstimationAt";
	public const string IsHydraulicMaximumAllowedRateOfChangeAt = "IsHydraulicMaximumAllowedRateOfChangeAt";
	public const string IsHydraulicMaximumAllowedValueAt = "IsHydraulicMaximumAllowedValueAt";
	public const string IsHydraulicMeasurementAt = "IsHydraulicMeasurementAt";
	public const string IsMassFlowRateAt = "IsMassFlowRateAt";
	public const string IsPressureAt = "IsPressureAt";
	public const string IsPressureGradientAt = "IsPressureGradientAt";
	public const string IsVolumetricFlowRateAt = "IsVolumetricFlowRateAt";
	public const string IsHydraulicConnectedTo = "IsHydraulicConnectedTo";
	public const string HasEndJunction = "HasEndJunction";
	public const string HasLeftBranch = "HasLeftBranch";
	public const string HasRightBranch = "HasRightBranch";
	public const string HasStartJunction = "HasStartJunction";
	public const string StartsHydraulicBranchDecomposition = "StartsHydraulicBranchDecomposition";
	public const string ConcernsAFluidComponent = "ConcernsAFluidComponent";
	public const string IsUpstreamOf = "IsUpstreamOf";
	public const string IsDownstreamOf = "IsDownstreamOf";
	public const string IsOfMechanicalStiffnessType = "IsOfMechanicalStiffnessType";
	public const string IsAMechanicalRepresentationFor = "IsAMechanicalRepresentationFor";
	public const string HasMechanicalState = "HasMechanicalState";
	public const string HasMechanicalStateValueFrom = "HasMechanicalStateValueFrom";
	public const string IsMechanicallyConnectedTo = "IsMechanicallyConnectedTo";
	public const string IsMechanicallyLocatedAt = "IsMechanicallyLocatedAt";
	public const string IsForMotionType = "IsForMotionType";
	public const string HasMotionType = "HasMotionType";
	public const string HasCoordinates = "HasCoordinates";
	public const string HasReferenceFrame = "HasReferenceFrame";
	public const string HasReferenceFrameOrigin = "HasReferenceFrameOrigin";
	public const string IsPhysicallyLocatedAt = "IsPhysicallyLocatedAt";
	public const string AssociatesMeasurableQuantity = "AssociatesMeasurableQuantity";
	public const string AssociatesUnit = "AssociatesUnit";
	public const string HasUnitAssociation = "HasUnitAssociation";
	public const string HasMeasurableQuantity = "HasMeasurableQuantity";
	public const string IsOfBaseQuantity = "IsOfBaseQuantity";
	public const string IsOfMeasurableQuantity = "IsOfMeasurableQuantity";
	public const string IsUnitForQuantity = "IsUnitForQuantity";
	public const string HasSIUnit = "HasSIUnit";
	public const string HasUnitOfMeasure = "HasUnitOfMeasure";
	public const string BelongsToSynchronizationGroup = "BelongsToSynchronizationGroup";
	public const string HasAcquisitionClock = "HasAcquisitionClock";
	public const string HasSourceClock = "HasSourceClock";
	public const string HasSourceTime = "HasSourceTime";
	public const string HasAcquisitionTime = "HasAcquisitionTime";
	public const string HasTransmissionDelay = "HasTransmissionDelay";
	public const string IsSynchronizationGroupInput = "IsSynchronizationGroupInput";
	public const string IsSynchronizationGroupOutput = "IsSynchronizationGroupOutput";
	public const string HasTimeReference = "HasTimeReference";
	public const string HasUncertainty = "HasUncertainty";
	public const string HasUncertaintyAccuracy = "HasUncertaintyAccuracy";
	public const string HasUncertaintyPrecision = "HasUncertaintyPrecision";
	public const string HasUncertaintyMin = "HasUncertaintyMin";
	public const string HasUncertaintyMax = "HasUncertaintyMax";
	public const string HasUncertaintyMean = "HasUncertaintyMean";
	public const string HasUncertaintyStandardDeviation = "HasUncertaintyStandardDeviation";
	public const string HasProportionError = "HasProportionError";
	public const string HasFullScale = "HasFullScale";
	public const string HasUncertaintyHistogram = "HasUncertaintyHistogram";
}
}
