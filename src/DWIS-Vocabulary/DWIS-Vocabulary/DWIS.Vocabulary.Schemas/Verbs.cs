using System;
namespace DWIS.Vocabulary.Schemas
{
public static class Verbs
{
public enum Enum
{
IsEnablingSignalFor = 878269849,
IsActivatedSignalFor = -2139540020,
AllowEnablementSignalFor = 528348135,
IsIdlingSignalFor = -1641781784,
IsUserControllableExtraMarginSignalFor = -1138568183,
IsUsedExtraMarginSignalFor = -330175449,
IsArmedSignalFor = -1795303868,
IsAlertTriggeredSignalFor = -372683774,
IsAlarmTriggeredSignalFor = 1211564237,
IsIdlingAfterTriggeredSignalFor = 1011464152,
IsInSafeModeSignalFor = -1104151871,
IsImpactDescriptionSignalFor = -1211398266,
IsFeatureSignalFor = -1615244105,
IsRecommendedBy = -509981613,
IsRecommendedFor = 1650248716,
HasControlLimit = 134442703,
IsCharacterizedBy = 1584736370,
HasOperationalStep = 818433188,
IsAnActionOf = -397145101,
IsATaskOf = 1638916031,
IsAContextOf = 460955288,
IsDependentOn = -1406007267,
IsObservableFrom = -808337863,
HasPressureReference = -756409243,
HasTemperatureReference = -322728137,
HasElevationReference = 992504204,
Controls = -1193638274,
HasFunction = 303661477,
IsCommandFor = -506821752,
IsComputationInput = -775486548,
IsLimitFor = -1518412432,
IsMinimumLimitFor = -1407731290,
IsMaximumLimitFor = 1804335176,
IsCurrentStateFor = -1004049237,
IsInformationForCurrentStateOf = -2073220583,
IsSetPointFor = 315027104,
IsSetPointRecommendationFor = -1575979519,
IsSetPointAdviceFor = -137839335,
IsSetPointMinimumRecommendationFor = -1128675241,
IsSetPointMinimumAdviceFor = 1635885712,
IsSetPointMaximumRecommendationFor = -1932996199,
IsSetPointMaximumAdviceFor = 190365358,
IsTransformationInput = 1590485621,
IsBufferingInput = -207168891,
IsDerivationInput = -1426628792,
IsResamplingInput = -708610114,
IsTransmissionInput = -152889227,
IsGeneratedBy = -830714855,
IsComputedBy = -1102773950,
IsMeasuredBy = -1217282277,
IsRecordedFrom = 397875159,
IsTransformationOutput = -2120550153,
IsBufferingOutput = 405490592,
IsDerivedFrom = 876264133,
IsIntegratedFrom = -842265605,
IsResampledBy = 1148249374,
IsTransmissionOutput = -1240022364,
IsProcessedBy = -1949776269,
IsProvidedBy = 618815623,
IsProvidedTo = -1895888632,
IsTransmittedBy = -1683183476,
IsConditionedBy = 1478406472,
IsConditionInput = 114594795,
IsConditionLeft = 1909065062,
IsConditionRight = 1843440634,
IsValidBy = -1580846466,
HasDomain = 326779565,
HasTimeIntervalDomain = -610889934,
HasValue = 1736002833,
HasDynamicValue = -262268840,
HasStaticValue = 126779714,
IsToBeComparedWith = -1905183629,
IsToBeGreaterThan = -2042580581,
IsToBeGreaterOrEqualThan = -1062254684,
IsToBeStrictlyGreaterThan = -2088493617,
IsToBeSmallerThan = 240630516,
IsToBeSmallerOrEqualThan = -935965624,
IsToBeStrictlySmallerThan = 1594883873,
IsToBeEqualTo = -1587097170,
IsToBeDifferentFrom = -1309989207,
IsSubPartOf = -1842241679,
AccountsFor = 1893924721,
IsRelatedToDrillingIncident = 1102578188,
ManagesIncident = 1838496442,
IsRelatedToDrillingLimit = -794799495,
ImplementsLimit = 365323886,
IsRelatedToDrillingObjective = -619469623,
ImplementsObjective = 860740086,
IsRelatedToDrillingProcedure = 1649665913,
ImplementsProcedure = -429327764,
DWISVerb = 442738247,
BelongsToClass = -814556241,
HasEndPoint = 587739776,
HasPressureReferenceType = -651027332,
EndsHydraulicBranchDecomposition = 1279738153,
IsAHydraulicRepresentationFor = 640978814,
HasBranchComponent = 1723015916,
HasBranchCoordinateSystem = 1144613460,
HasHydraulicState = 2025339547,
HasHydraulicStateValueFrom = -759671009,
HasLeftBranchCoordinates = 498980622,
HasRightBranchCoordinates = 2102959437,
IsHydraulicallyLocatedAt = 1195526886,
IsEquivalentCirculationDensityAt = -702122976,
IsFluidDensityAt = 1288763142,
IsFluidTemperatureAt = -1754340819,
IsFluidVelocityAt = 1134879732,
IsOpeningRatioAt = 19819203,
IsVolumeAt = 37086115,
IsHydraulicEstimationAt = 1168268297,
IsHydraulicMaximumAllowedRateOfChangeAt = 169986216,
IsHydraulicMaximumAllowedValueAt = 872477472,
IsHydraulicMeasurementAt = 477351340,
IsMassFlowRateAt = -1342830240,
IsPressureAt = -1670622343,
IsPressureGradientAt = -1467314396,
IsVolumetricFlowRateAt = -1159784203,
IsHydraulicConnectedTo = 1976469735,
HasEndJunction = 1946937756,
HasLeftBranch = -346553843,
HasRightBranch = -538507535,
HasStartJunction = -1853617549,
StartsHydraulicBranchDecomposition = -2018462932,
ConcernsAFluidComponent = -1982354568,
IsOfMechanicalStiffnessType = 533319077,
IsAMechanicalRepresentationFor = 1367367005,
HasMechanicalState = -2138794598,
HasMechanicalStateValueFrom = -1063393294,
IsMechanicallyConnectedTo = 886411620,
IsMechanicallyLocatedAt = 1062432013,
IsForMotionType = 725211109,
HasMotionType = -1147604992,
HasCoordinates = 18031239,
HasReferenceFrame = -590461066,
HasReferenceFrameOrigin = -2035749466,
IsPhysicallyLocatedAt = -213330914,
AssociatesMeasurableQuantity = -1082068872,
AssociatesUnit = -1436202658,
HasUnitAssociation = 103765406,
HasMeasurableQuantity = 14501312,
IsOfBaseQuantity = -1453993601,
IsOfMeasurableQuantity = 1518342265,
IsUnitForQuantity = 898572885,
HasSIUnit = 109122437,
HasUnitOfMeasure = -1894481527,
BelongsToSynchronizationGroup = -1622782679,
HasAcquisitionClock = -270176567,
HasSourceClock = -1111674855,
HasSourceTime = 167208094,
HasAcquisitionTime = -50711221,
HasTransmissionDelay = -2078326842,
IsSynchronizationGroupInput = 261199389,
IsSynchronizationGroupOutput = -1639300673,
HasTimeReference = -338550754,
HasUncertainty = 648685136,
HasUncertaintyAccuracy = 7098685,
HasUncertaintyPrecision = 1032843925,
HasUncertaintyMin = 392446683,
HasUncertaintyMax = -812131284,
HasUncertaintyMean = 737108898,
HasUncertaintyStandardDeviation = 948456848,
HasProportionError = -866408671,
HasFullScale = -1477346986,
HasUncertaintyHistogram = 1521707629
}
	public const string IsEnablingSignalFor = "IsEnablingSignalFor";
	public const string IsActivatedSignalFor = "IsActivatedSignalFor";
	public const string AllowEnablementSignalFor = "AllowEnablementSignalFor";
	public const string IsIdlingSignalFor = "IsIdlingSignalFor";
	public const string IsUserControllableExtraMarginSignalFor = "IsUserControllableExtraMarginSignalFor";
	public const string IsUsedExtraMarginSignalFor = "IsUsedExtraMarginSignalFor";
	public const string IsArmedSignalFor = "IsArmedSignalFor";
	public const string IsAlertTriggeredSignalFor = "IsAlertTriggeredSignalFor";
	public const string IsAlarmTriggeredSignalFor = "IsAlarmTriggeredSignalFor";
	public const string IsIdlingAfterTriggeredSignalFor = "IsIdlingAfterTriggeredSignalFor";
	public const string IsInSafeModeSignalFor = "IsInSafeModeSignalFor";
	public const string IsImpactDescriptionSignalFor = "IsImpactDescriptionSignalFor";
	public const string IsFeatureSignalFor = "IsFeatureSignalFor";
	public const string IsRecommendedBy = "IsRecommendedBy";
	public const string IsRecommendedFor = "IsRecommendedFor";
	public const string HasControlLimit = "HasControlLimit";
	public const string IsCharacterizedBy = "IsCharacterizedBy";
	public const string HasOperationalStep = "HasOperationalStep";
	public const string IsAnActionOf = "IsAnActionOf";
	public const string IsATaskOf = "IsATaskOf";
	public const string IsAContextOf = "IsAContextOf";
	public const string IsDependentOn = "IsDependentOn";
	public const string IsObservableFrom = "IsObservableFrom";
	public const string HasPressureReference = "HasPressureReference";
	public const string HasTemperatureReference = "HasTemperatureReference";
	public const string HasElevationReference = "HasElevationReference";
	public const string Controls = "Controls";
	public const string HasFunction = "HasFunction";
	public const string IsCommandFor = "IsCommandFor";
	public const string IsComputationInput = "IsComputationInput";
	public const string IsLimitFor = "IsLimitFor";
	public const string IsMinimumLimitFor = "IsMinimumLimitFor";
	public const string IsMaximumLimitFor = "IsMaximumLimitFor";
	public const string IsCurrentStateFor = "IsCurrentStateFor";
	public const string IsInformationForCurrentStateOf = "IsInformationForCurrentStateOf";
	public const string IsSetPointFor = "IsSetPointFor";
	public const string IsSetPointRecommendationFor = "IsSetPointRecommendationFor";
	public const string IsSetPointAdviceFor = "IsSetPointAdviceFor";
	public const string IsSetPointMinimumRecommendationFor = "IsSetPointMinimumRecommendationFor";
	public const string IsSetPointMinimumAdviceFor = "IsSetPointMinimumAdviceFor";
	public const string IsSetPointMaximumRecommendationFor = "IsSetPointMaximumRecommendationFor";
	public const string IsSetPointMaximumAdviceFor = "IsSetPointMaximumAdviceFor";
	public const string IsTransformationInput = "IsTransformationInput";
	public const string IsBufferingInput = "IsBufferingInput";
	public const string IsDerivationInput = "IsDerivationInput";
	public const string IsResamplingInput = "IsResamplingInput";
	public const string IsTransmissionInput = "IsTransmissionInput";
	public const string IsGeneratedBy = "IsGeneratedBy";
	public const string IsComputedBy = "IsComputedBy";
	public const string IsMeasuredBy = "IsMeasuredBy";
	public const string IsRecordedFrom = "IsRecordedFrom";
	public const string IsTransformationOutput = "IsTransformationOutput";
	public const string IsBufferingOutput = "IsBufferingOutput";
	public const string IsDerivedFrom = "IsDerivedFrom";
	public const string IsIntegratedFrom = "IsIntegratedFrom";
	public const string IsResampledBy = "IsResampledBy";
	public const string IsTransmissionOutput = "IsTransmissionOutput";
	public const string IsProcessedBy = "IsProcessedBy";
	public const string IsProvidedBy = "IsProvidedBy";
	public const string IsProvidedTo = "IsProvidedTo";
	public const string IsTransmittedBy = "IsTransmittedBy";
	public const string IsConditionedBy = "IsConditionedBy";
	public const string IsConditionInput = "IsConditionInput";
	public const string IsConditionLeft = "IsConditionLeft";
	public const string IsConditionRight = "IsConditionRight";
	public const string IsValidBy = "IsValidBy";
	public const string HasDomain = "HasDomain";
	public const string HasTimeIntervalDomain = "HasTimeIntervalDomain";
	public const string HasValue = "HasValue";
	public const string HasDynamicValue = "HasDynamicValue";
	public const string HasStaticValue = "HasStaticValue";
	public const string IsToBeComparedWith = "IsToBeComparedWith";
	public const string IsToBeGreaterThan = "IsToBeGreaterThan";
	public const string IsToBeGreaterOrEqualThan = "IsToBeGreaterOrEqualThan";
	public const string IsToBeStrictlyGreaterThan = "IsToBeStrictlyGreaterThan";
	public const string IsToBeSmallerThan = "IsToBeSmallerThan";
	public const string IsToBeSmallerOrEqualThan = "IsToBeSmallerOrEqualThan";
	public const string IsToBeStrictlySmallerThan = "IsToBeStrictlySmallerThan";
	public const string IsToBeEqualTo = "IsToBeEqualTo";
	public const string IsToBeDifferentFrom = "IsToBeDifferentFrom";
	public const string IsSubPartOf = "IsSubPartOf";
	public const string AccountsFor = "AccountsFor";
	public const string IsRelatedToDrillingIncident = "IsRelatedToDrillingIncident";
	public const string ManagesIncident = "ManagesIncident";
	public const string IsRelatedToDrillingLimit = "IsRelatedToDrillingLimit";
	public const string ImplementsLimit = "ImplementsLimit";
	public const string IsRelatedToDrillingObjective = "IsRelatedToDrillingObjective";
	public const string ImplementsObjective = "ImplementsObjective";
	public const string IsRelatedToDrillingProcedure = "IsRelatedToDrillingProcedure";
	public const string ImplementsProcedure = "ImplementsProcedure";
	public const string DWISVerb = "DWISVerb";
	public const string BelongsToClass = "BelongsToClass";
	public const string HasEndPoint = "HasEndPoint";
	public const string HasPressureReferenceType = "HasPressureReferenceType";
	public const string EndsHydraulicBranchDecomposition = "EndsHydraulicBranchDecomposition";
	public const string IsAHydraulicRepresentationFor = "IsAHydraulicRepresentationFor";
	public const string HasBranchComponent = "HasBranchComponent";
	public const string HasBranchCoordinateSystem = "HasBranchCoordinateSystem";
	public const string HasHydraulicState = "HasHydraulicState";
	public const string HasHydraulicStateValueFrom = "HasHydraulicStateValueFrom";
	public const string HasLeftBranchCoordinates = "HasLeftBranchCoordinates";
	public const string HasRightBranchCoordinates = "HasRightBranchCoordinates";
	public const string IsHydraulicallyLocatedAt = "IsHydraulicallyLocatedAt";
	public const string IsEquivalentCirculationDensityAt = "IsEquivalentCirculationDensityAt";
	public const string IsFluidDensityAt = "IsFluidDensityAt";
	public const string IsFluidTemperatureAt = "IsFluidTemperatureAt";
	public const string IsFluidVelocityAt = "IsFluidVelocityAt";
	public const string IsOpeningRatioAt = "IsOpeningRatioAt";
	public const string IsVolumeAt = "IsVolumeAt";
	public const string IsHydraulicEstimationAt = "IsHydraulicEstimationAt";
	public const string IsHydraulicMaximumAllowedRateOfChangeAt = "IsHydraulicMaximumAllowedRateOfChangeAt";
	public const string IsHydraulicMaximumAllowedValueAt = "IsHydraulicMaximumAllowedValueAt";
	public const string IsHydraulicMeasurementAt = "IsHydraulicMeasurementAt";
	public const string IsMassFlowRateAt = "IsMassFlowRateAt";
	public const string IsPressureAt = "IsPressureAt";
	public const string IsPressureGradientAt = "IsPressureGradientAt";
	public const string IsVolumetricFlowRateAt = "IsVolumetricFlowRateAt";
	public const string IsHydraulicConnectedTo = "IsHydraulicConnectedTo";
	public const string HasEndJunction = "HasEndJunction";
	public const string HasLeftBranch = "HasLeftBranch";
	public const string HasRightBranch = "HasRightBranch";
	public const string HasStartJunction = "HasStartJunction";
	public const string StartsHydraulicBranchDecomposition = "StartsHydraulicBranchDecomposition";
	public const string ConcernsAFluidComponent = "ConcernsAFluidComponent";
	public const string IsOfMechanicalStiffnessType = "IsOfMechanicalStiffnessType";
	public const string IsAMechanicalRepresentationFor = "IsAMechanicalRepresentationFor";
	public const string HasMechanicalState = "HasMechanicalState";
	public const string HasMechanicalStateValueFrom = "HasMechanicalStateValueFrom";
	public const string IsMechanicallyConnectedTo = "IsMechanicallyConnectedTo";
	public const string IsMechanicallyLocatedAt = "IsMechanicallyLocatedAt";
	public const string IsForMotionType = "IsForMotionType";
	public const string HasMotionType = "HasMotionType";
	public const string HasCoordinates = "HasCoordinates";
	public const string HasReferenceFrame = "HasReferenceFrame";
	public const string HasReferenceFrameOrigin = "HasReferenceFrameOrigin";
	public const string IsPhysicallyLocatedAt = "IsPhysicallyLocatedAt";
	public const string AssociatesMeasurableQuantity = "AssociatesMeasurableQuantity";
	public const string AssociatesUnit = "AssociatesUnit";
	public const string HasUnitAssociation = "HasUnitAssociation";
	public const string HasMeasurableQuantity = "HasMeasurableQuantity";
	public const string IsOfBaseQuantity = "IsOfBaseQuantity";
	public const string IsOfMeasurableQuantity = "IsOfMeasurableQuantity";
	public const string IsUnitForQuantity = "IsUnitForQuantity";
	public const string HasSIUnit = "HasSIUnit";
	public const string HasUnitOfMeasure = "HasUnitOfMeasure";
	public const string BelongsToSynchronizationGroup = "BelongsToSynchronizationGroup";
	public const string HasAcquisitionClock = "HasAcquisitionClock";
	public const string HasSourceClock = "HasSourceClock";
	public const string HasSourceTime = "HasSourceTime";
	public const string HasAcquisitionTime = "HasAcquisitionTime";
	public const string HasTransmissionDelay = "HasTransmissionDelay";
	public const string IsSynchronizationGroupInput = "IsSynchronizationGroupInput";
	public const string IsSynchronizationGroupOutput = "IsSynchronizationGroupOutput";
	public const string HasTimeReference = "HasTimeReference";
	public const string HasUncertainty = "HasUncertainty";
	public const string HasUncertaintyAccuracy = "HasUncertaintyAccuracy";
	public const string HasUncertaintyPrecision = "HasUncertaintyPrecision";
	public const string HasUncertaintyMin = "HasUncertaintyMin";
	public const string HasUncertaintyMax = "HasUncertaintyMax";
	public const string HasUncertaintyMean = "HasUncertaintyMean";
	public const string HasUncertaintyStandardDeviation = "HasUncertaintyStandardDeviation";
	public const string HasProportionError = "HasProportionError";
	public const string HasFullScale = "HasFullScale";
	public const string HasUncertaintyHistogram = "HasUncertaintyHistogram";
}
}
