using System;
namespace DWIS.Vocabulary.Schemas
{
public static class Verbs
{
public enum Enum
{
IsEnablingSignalFor = 665296116,
IsActivatedSignalFor = -957333086,
AllowEnablementSignalFor = 376859856,
IsIdlingSignalFor = -368595844,
IsUserControllableExtraMarginSignalFor = 1992160890,
IsUsedExtraMarginSignalFor = -1710842731,
IsArmedSignalFor = 229474389,
IsAlertTriggeredSignalFor = -1915594631,
IsAlarmTriggeredSignalFor = -526848682,
IsIdlingAfterTriggeredSignalFor = -985552853,
IsInSafeModeSignalFor = -1244707042,
IsImpactDescriptionSignalFor = -95682658,
IsFeatureSignalFor = 29239486,
IsRecommendedBy = 933767754,
IsRecommendedFor = -474725280,
HasControlLimit = -1355782626,
IsCharacterizedBy = 2137639102,
HasOperationalStep = 178558806,
IsAnActionOf = -395654463,
IsATaskOf = 859982775,
IsAContextOf = 1698520911,
IsDependentOn = 1633926219,
IsObservableFrom = -658244060,
HasPressureReference = 1587299102,
HasTemperatureReference = 836199271,
HasElevationReference = -1481392931,
Controls = -572560985,
HasFunction = 1657731990,
IsCommandFor = -141357454,
IsComputationInput = 203184820,
IsLimitFor = 47059900,
IsMinimumLimitFor = -247143785,
IsMaximumLimitFor = -832279029,
IsCurrentStateFor = -1031338647,
IsInformationForCurrentStateOf = -1945885649,
IsInSafeModeStateFor = 520561474,
IsInIdlingStateFor = -488147471,
IsSetPointFor = -1704546749,
IsSetPointRecommendationFor = -416834246,
IsSetPointAdviceFor = -145474287,
IsSetPointMinimumRecommendationFor = 1116252268,
IsSetPointMinimumAdviceFor = 141729717,
IsSetPointMaximumRecommendationFor = 1539154420,
IsSetPointMaximumAdviceFor = 160058200,
IsTransformationInput = 1038115183,
IsBufferingInput = 1329800889,
IsDerivationInput = 1489459790,
IsResamplingInput = 1574588394,
IsTransmissionInput = -1925841129,
IsGeneratedBy = 133830842,
IsComputedBy = -1831832538,
IsMeasuredBy = -1901508753,
IsRecordedFrom = 72809631,
IsTransformationOutput = -1668129700,
IsBufferingOutput = -634791428,
IsDerivedFrom = 317660418,
IsIntegratedFrom = -2127559055,
IsResampledBy = -1128654657,
IsTransmissionOutput = 1415120326,
IsProcessedBy = -970178164,
IsProvidedBy = 673446027,
IsProvidedTo = 2030917419,
IsTransmittedBy = 534571161,
IsConditionedBy = -84703108,
IsConditionInput = 1869015552,
IsConditionLeft = 1570374610,
IsConditionRight = -645620893,
IsValidBy = 1934816589,
HasDomain = -107633501,
HasTimeIntervalDomain = -843013,
HasValue = 1851056403,
HasDynamicValue = 1012638257,
HasStaticValue = -499583464,
IsToBeComparedWith = 1888589883,
IsToBeGreaterThan = -1397418848,
IsToBeGreaterOrEqualThan = 1885940015,
IsToBeStrictlyGreaterThan = 714983113,
IsToBeSmallerThan = 1916107461,
IsToBeSmallerOrEqualThan = -144080095,
IsToBeStrictlySmallerThan = -279564962,
IsToBeEqualTo = -637751377,
IsToBeDifferentFrom = -1234683848,
IsSubPartOf = 537167692,
AccountsFor = -208886144,
IsRelatedToDrillingIncident = 2106260277,
ManagesIncident = 298914246,
IsRelatedToDrillingLimit = -619064009,
ImplementsLimit = 581980587,
IsRelatedToDrillingObjective = 60491159,
ImplementsObjective = 1779780958,
IsRelatedToDrillingProcedure = -2108889049,
ImplementsProcedure = 363334673,
DWISVerb = -532816264,
BelongsToClass = 1640999263,
HasEndPoint = -870480873,
HasPressureReferenceType = -774819079,
EndsHydraulicBranchDecomposition = -1679936296,
IsAHydraulicRepresentationFor = -896024235,
HasBranchComponent = -1402424995,
HasBranchCoordinateSystem = -175210982,
HasHydraulicState = 589130493,
HasHydraulicStateValueFrom = 1129738342,
HasLeftBranchCoordinates = 1227162473,
HasRightBranchCoordinates = 1612209059,
IsHydraulicallyLocatedAt = -18816535,
IsEquivalentCirculationDensityAt = -872049264,
IsFluidDensityAt = -1780568669,
IsFluidTemperatureAt = -61225921,
IsFluidVelocityAt = 889666136,
IsOpeningRatioAt = -607241528,
IsVolumeAt = 784276263,
IsHydraulicEstimationAt = -286650080,
IsHydraulicMaximumAllowedRateOfChangeAt = -1717793871,
IsHydraulicMaximumAllowedValueAt = -801939392,
IsHydraulicMeasurementAt = 1875929683,
IsMassFlowRateAt = 888460872,
IsPressureAt = -273114823,
IsPressureGradientAt = 1938097063,
IsVolumetricFlowRateAt = -779947907,
IsHydraulicConnectedTo = -399450515,
HasEndJunction = -439789067,
HasLeftBranch = -24263274,
HasRightBranch = -1581838484,
HasStartJunction = -1790047244,
StartsHydraulicBranchDecomposition = -1954197571,
ConcernsAFluidComponent = 1737313528,
IsOfMechanicalStiffnessType = 120068511,
IsAMechanicalRepresentationFor = -303984241,
HasMechanicalState = -148302978,
HasMechanicalStateValueFrom = -1180594297,
IsMechanicallyConnectedTo = 459687503,
IsMechanicallyLocatedAt = -263018188,
IsForMotionType = 1807690489,
HasMotionType = 1468662726,
HasCoordinates = -361183887,
HasReferenceFrame = -2124659357,
HasReferenceFrameOrigin = 1868682243,
IsPhysicallyLocatedAt = 217444235,
AssociatesMeasurableQuantity = -1096515819,
AssociatesUnit = 2021948895,
HasUnitAssociation = 1375460686,
HasMeasurableQuantity = -2135511937,
IsOfBaseQuantity = 531320902,
IsOfMeasurableQuantity = 2113317097,
IsUnitForQuantity = 2109302125,
HasSIUnit = 1165913668,
HasUnitOfMeasure = 1796619447,
BelongsToSynchronizationGroup = -940775491,
HasAcquisitionClock = -1606891584,
HasSourceClock = 2001765049,
HasSourceTime = -263036331,
HasAcquisitionTime = -651752713,
HasTransmissionDelay = -1363507345,
IsSynchronizationGroupInput = -1906839741,
IsSynchronizationGroupOutput = 1361121355,
HasTimeReference = 1812239618,
HasUncertainty = -1739393344,
HasUncertaintyAccuracy = 1786304606,
HasUncertaintyPrecision = -1381484114,
HasUncertaintyMin = 1486040610,
HasUncertaintyMax = 674865385,
HasUncertaintyMean = -1882669598,
HasUncertaintyStandardDeviation = 1331729655,
HasProportionError = 1640756595,
HasFullScale = 1499646339,
HasUncertaintyHistogram = 1813323304
}
	public const string IsEnablingSignalFor = "IsEnablingSignalFor";
	public const string IsActivatedSignalFor = "IsActivatedSignalFor";
	public const string AllowEnablementSignalFor = "AllowEnablementSignalFor";
	public const string IsIdlingSignalFor = "IsIdlingSignalFor";
	public const string IsUserControllableExtraMarginSignalFor = "IsUserControllableExtraMarginSignalFor";
	public const string IsUsedExtraMarginSignalFor = "IsUsedExtraMarginSignalFor";
	public const string IsArmedSignalFor = "IsArmedSignalFor";
	public const string IsAlertTriggeredSignalFor = "IsAlertTriggeredSignalFor";
	public const string IsAlarmTriggeredSignalFor = "IsAlarmTriggeredSignalFor";
	public const string IsIdlingAfterTriggeredSignalFor = "IsIdlingAfterTriggeredSignalFor";
	public const string IsInSafeModeSignalFor = "IsInSafeModeSignalFor";
	public const string IsImpactDescriptionSignalFor = "IsImpactDescriptionSignalFor";
	public const string IsFeatureSignalFor = "IsFeatureSignalFor";
	public const string IsRecommendedBy = "IsRecommendedBy";
	public const string IsRecommendedFor = "IsRecommendedFor";
	public const string HasControlLimit = "HasControlLimit";
	public const string IsCharacterizedBy = "IsCharacterizedBy";
	public const string HasOperationalStep = "HasOperationalStep";
	public const string IsAnActionOf = "IsAnActionOf";
	public const string IsATaskOf = "IsATaskOf";
	public const string IsAContextOf = "IsAContextOf";
	public const string IsDependentOn = "IsDependentOn";
	public const string IsObservableFrom = "IsObservableFrom";
	public const string HasPressureReference = "HasPressureReference";
	public const string HasTemperatureReference = "HasTemperatureReference";
	public const string HasElevationReference = "HasElevationReference";
	public const string Controls = "Controls";
	public const string HasFunction = "HasFunction";
	public const string IsCommandFor = "IsCommandFor";
	public const string IsComputationInput = "IsComputationInput";
	public const string IsLimitFor = "IsLimitFor";
	public const string IsMinimumLimitFor = "IsMinimumLimitFor";
	public const string IsMaximumLimitFor = "IsMaximumLimitFor";
	public const string IsCurrentStateFor = "IsCurrentStateFor";
	public const string IsInformationForCurrentStateOf = "IsInformationForCurrentStateOf";
	public const string IsInSafeModeStateFor = "IsInSafeModeStateFor";
	public const string IsInIdlingStateFor = "IsInIdlingStateFor";
	public const string IsSetPointFor = "IsSetPointFor";
	public const string IsSetPointRecommendationFor = "IsSetPointRecommendationFor";
	public const string IsSetPointAdviceFor = "IsSetPointAdviceFor";
	public const string IsSetPointMinimumRecommendationFor = "IsSetPointMinimumRecommendationFor";
	public const string IsSetPointMinimumAdviceFor = "IsSetPointMinimumAdviceFor";
	public const string IsSetPointMaximumRecommendationFor = "IsSetPointMaximumRecommendationFor";
	public const string IsSetPointMaximumAdviceFor = "IsSetPointMaximumAdviceFor";
	public const string IsTransformationInput = "IsTransformationInput";
	public const string IsBufferingInput = "IsBufferingInput";
	public const string IsDerivationInput = "IsDerivationInput";
	public const string IsResamplingInput = "IsResamplingInput";
	public const string IsTransmissionInput = "IsTransmissionInput";
	public const string IsGeneratedBy = "IsGeneratedBy";
	public const string IsComputedBy = "IsComputedBy";
	public const string IsMeasuredBy = "IsMeasuredBy";
	public const string IsRecordedFrom = "IsRecordedFrom";
	public const string IsTransformationOutput = "IsTransformationOutput";
	public const string IsBufferingOutput = "IsBufferingOutput";
	public const string IsDerivedFrom = "IsDerivedFrom";
	public const string IsIntegratedFrom = "IsIntegratedFrom";
	public const string IsResampledBy = "IsResampledBy";
	public const string IsTransmissionOutput = "IsTransmissionOutput";
	public const string IsProcessedBy = "IsProcessedBy";
	public const string IsProvidedBy = "IsProvidedBy";
	public const string IsProvidedTo = "IsProvidedTo";
	public const string IsTransmittedBy = "IsTransmittedBy";
	public const string IsConditionedBy = "IsConditionedBy";
	public const string IsConditionInput = "IsConditionInput";
	public const string IsConditionLeft = "IsConditionLeft";
	public const string IsConditionRight = "IsConditionRight";
	public const string IsValidBy = "IsValidBy";
	public const string HasDomain = "HasDomain";
	public const string HasTimeIntervalDomain = "HasTimeIntervalDomain";
	public const string HasValue = "HasValue";
	public const string HasDynamicValue = "HasDynamicValue";
	public const string HasStaticValue = "HasStaticValue";
	public const string IsToBeComparedWith = "IsToBeComparedWith";
	public const string IsToBeGreaterThan = "IsToBeGreaterThan";
	public const string IsToBeGreaterOrEqualThan = "IsToBeGreaterOrEqualThan";
	public const string IsToBeStrictlyGreaterThan = "IsToBeStrictlyGreaterThan";
	public const string IsToBeSmallerThan = "IsToBeSmallerThan";
	public const string IsToBeSmallerOrEqualThan = "IsToBeSmallerOrEqualThan";
	public const string IsToBeStrictlySmallerThan = "IsToBeStrictlySmallerThan";
	public const string IsToBeEqualTo = "IsToBeEqualTo";
	public const string IsToBeDifferentFrom = "IsToBeDifferentFrom";
	public const string IsSubPartOf = "IsSubPartOf";
	public const string AccountsFor = "AccountsFor";
	public const string IsRelatedToDrillingIncident = "IsRelatedToDrillingIncident";
	public const string ManagesIncident = "ManagesIncident";
	public const string IsRelatedToDrillingLimit = "IsRelatedToDrillingLimit";
	public const string ImplementsLimit = "ImplementsLimit";
	public const string IsRelatedToDrillingObjective = "IsRelatedToDrillingObjective";
	public const string ImplementsObjective = "ImplementsObjective";
	public const string IsRelatedToDrillingProcedure = "IsRelatedToDrillingProcedure";
	public const string ImplementsProcedure = "ImplementsProcedure";
	public const string DWISVerb = "DWISVerb";
	public const string BelongsToClass = "BelongsToClass";
	public const string HasEndPoint = "HasEndPoint";
	public const string HasPressureReferenceType = "HasPressureReferenceType";
	public const string EndsHydraulicBranchDecomposition = "EndsHydraulicBranchDecomposition";
	public const string IsAHydraulicRepresentationFor = "IsAHydraulicRepresentationFor";
	public const string HasBranchComponent = "HasBranchComponent";
	public const string HasBranchCoordinateSystem = "HasBranchCoordinateSystem";
	public const string HasHydraulicState = "HasHydraulicState";
	public const string HasHydraulicStateValueFrom = "HasHydraulicStateValueFrom";
	public const string HasLeftBranchCoordinates = "HasLeftBranchCoordinates";
	public const string HasRightBranchCoordinates = "HasRightBranchCoordinates";
	public const string IsHydraulicallyLocatedAt = "IsHydraulicallyLocatedAt";
	public const string IsEquivalentCirculationDensityAt = "IsEquivalentCirculationDensityAt";
	public const string IsFluidDensityAt = "IsFluidDensityAt";
	public const string IsFluidTemperatureAt = "IsFluidTemperatureAt";
	public const string IsFluidVelocityAt = "IsFluidVelocityAt";
	public const string IsOpeningRatioAt = "IsOpeningRatioAt";
	public const string IsVolumeAt = "IsVolumeAt";
	public const string IsHydraulicEstimationAt = "IsHydraulicEstimationAt";
	public const string IsHydraulicMaximumAllowedRateOfChangeAt = "IsHydraulicMaximumAllowedRateOfChangeAt";
	public const string IsHydraulicMaximumAllowedValueAt = "IsHydraulicMaximumAllowedValueAt";
	public const string IsHydraulicMeasurementAt = "IsHydraulicMeasurementAt";
	public const string IsMassFlowRateAt = "IsMassFlowRateAt";
	public const string IsPressureAt = "IsPressureAt";
	public const string IsPressureGradientAt = "IsPressureGradientAt";
	public const string IsVolumetricFlowRateAt = "IsVolumetricFlowRateAt";
	public const string IsHydraulicConnectedTo = "IsHydraulicConnectedTo";
	public const string HasEndJunction = "HasEndJunction";
	public const string HasLeftBranch = "HasLeftBranch";
	public const string HasRightBranch = "HasRightBranch";
	public const string HasStartJunction = "HasStartJunction";
	public const string StartsHydraulicBranchDecomposition = "StartsHydraulicBranchDecomposition";
	public const string ConcernsAFluidComponent = "ConcernsAFluidComponent";
	public const string IsOfMechanicalStiffnessType = "IsOfMechanicalStiffnessType";
	public const string IsAMechanicalRepresentationFor = "IsAMechanicalRepresentationFor";
	public const string HasMechanicalState = "HasMechanicalState";
	public const string HasMechanicalStateValueFrom = "HasMechanicalStateValueFrom";
	public const string IsMechanicallyConnectedTo = "IsMechanicallyConnectedTo";
	public const string IsMechanicallyLocatedAt = "IsMechanicallyLocatedAt";
	public const string IsForMotionType = "IsForMotionType";
	public const string HasMotionType = "HasMotionType";
	public const string HasCoordinates = "HasCoordinates";
	public const string HasReferenceFrame = "HasReferenceFrame";
	public const string HasReferenceFrameOrigin = "HasReferenceFrameOrigin";
	public const string IsPhysicallyLocatedAt = "IsPhysicallyLocatedAt";
	public const string AssociatesMeasurableQuantity = "AssociatesMeasurableQuantity";
	public const string AssociatesUnit = "AssociatesUnit";
	public const string HasUnitAssociation = "HasUnitAssociation";
	public const string HasMeasurableQuantity = "HasMeasurableQuantity";
	public const string IsOfBaseQuantity = "IsOfBaseQuantity";
	public const string IsOfMeasurableQuantity = "IsOfMeasurableQuantity";
	public const string IsUnitForQuantity = "IsUnitForQuantity";
	public const string HasSIUnit = "HasSIUnit";
	public const string HasUnitOfMeasure = "HasUnitOfMeasure";
	public const string BelongsToSynchronizationGroup = "BelongsToSynchronizationGroup";
	public const string HasAcquisitionClock = "HasAcquisitionClock";
	public const string HasSourceClock = "HasSourceClock";
	public const string HasSourceTime = "HasSourceTime";
	public const string HasAcquisitionTime = "HasAcquisitionTime";
	public const string HasTransmissionDelay = "HasTransmissionDelay";
	public const string IsSynchronizationGroupInput = "IsSynchronizationGroupInput";
	public const string IsSynchronizationGroupOutput = "IsSynchronizationGroupOutput";
	public const string HasTimeReference = "HasTimeReference";
	public const string HasUncertainty = "HasUncertainty";
	public const string HasUncertaintyAccuracy = "HasUncertaintyAccuracy";
	public const string HasUncertaintyPrecision = "HasUncertaintyPrecision";
	public const string HasUncertaintyMin = "HasUncertaintyMin";
	public const string HasUncertaintyMax = "HasUncertaintyMax";
	public const string HasUncertaintyMean = "HasUncertaintyMean";
	public const string HasUncertaintyStandardDeviation = "HasUncertaintyStandardDeviation";
	public const string HasProportionError = "HasProportionError";
	public const string HasFullScale = "HasFullScale";
	public const string HasUncertaintyHistogram = "HasUncertaintyHistogram";
}
}
