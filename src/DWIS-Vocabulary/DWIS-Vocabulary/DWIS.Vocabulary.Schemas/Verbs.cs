using System;
namespace DWIS.Vocabulary.Schemas
{
public static class Verbs
{
public enum Enum
{
IsEnablingSignalFor = -2056568003,
IsActivatedSignalFor = -2071657267,
AllowEnablementSignalFor = -1318657000,
IsIdlingSignalFor = 159947554,
IsUserControllableExtraMarginSignalFor = 127378609,
IsUsedExtraMarginSignalFor = 1151665818,
IsArmedSignalFor = 1379404479,
IsAlertTriggeredSignalFor = 2114323559,
IsAlarmTriggeredSignalFor = 1445970204,
IsInSafeModeSignalFor = 497892024,
IsImpactDescriptionSignalFor = -1466319484,
IsFeatureSignalFor = -1258150320,
IsRecommendedBy = 1551090902,
IsRecommendedFor = -1818111819,
HasControlLimit = -1869574626,
IsCharacterizedBy = 1416050540,
HasOperationalStep = 446754558,
IsAnActionOf = -178773232,
IsATaskOf = 579173417,
IsAContextOf = 1410536868,
IsDependentOn = -109026815,
IsObservableFrom = 1311915579,
HasPressureReference = -196254767,
HasTemperatureReference = -67167832,
HasElevationReference = 792927134,
Controls = -169623826,
HasFunction = -1488883271,
IsCommandFor = -9543507,
IsComputationInput = -1352923685,
IsLimitFor = -745473652,
IsMinimumLimitFor = -257887892,
IsMaximumLimitFor = 628422591,
IsCurrentStateFor = -278254510,
IsInformationForCurrentStateOf = -763403931,
IsInSafeModeStateFor = 248832540,
IsSetPointFor = -1408330047,
IsSetPointRecommendationFor = -674818405,
IsSetPointAdviceFor = -918252100,
IsSetPointMinimumRecommendationFor = -141441170,
IsSetPointMinimumAdviceFor = -87215919,
IsSetPointMaximumRecommendationFor = 1482438866,
IsSetPointMaximumAdviceFor = -347198386,
IsTransformationInput = 1452583511,
IsBufferingInput = -292433578,
IsDerivationInput = 1362758425,
IsResamplingInput = -510007255,
IsTransmissionInput = -990401894,
IsGeneratedBy = -449248600,
IsComputedBy = 631074524,
IsMeasuredBy = -1539513602,
IsRecordedFrom = -775772201,
IsTransformationOutput = -1747546701,
IsBufferingOutput = 874801402,
IsDerivedFrom = -422717788,
IsIntegratedFrom = 1811958155,
IsResampledBy = -278210518,
IsTransmissionOutput = 1305666668,
IsProcessedBy = 998560965,
IsProvidedBy = -310083282,
IsProvidedTo = 1682352039,
IsTransmittedBy = 1276052392,
IsConditionedBy = 956578449,
IsConditionInput = 905528505,
IsConditionLeft = -1836387819,
IsConditionRight = -101797634,
IsValidBy = -744220962,
HasDomain = -1417670109,
HasTimeIntervalDomain = 985129071,
HasValue = -97541447,
HasDynamicValue = 876038695,
HasStaticValue = 994665039,
IsToBeComparedWith = 549055746,
IsToBeGreaterThan = 68490751,
IsToBeGreaterOrEqualThan = -5855837,
IsToBeStrictlyGreaterThan = 691841060,
IsToBeSmallerThan = -514134236,
IsToBeSmallerOrEqualThan = -331066071,
IsToBeStrictlySmallerThan = -1207636345,
IsToBeEqualTo = 342285520,
IsToBeDifferentFrom = 228294855,
IsSubPartOf = 686481289,
AccountsFor = -1347468314,
IsRelatedToDrillingIncident = 890919692,
ManagesIncident = 1454665779,
IsRelatedToDrillingLimit = 1043951909,
ImplementsLimit = 1423272931,
IsRelatedToDrillingObjective = -529944576,
ImplementsObjective = 1449935226,
IsRelatedToDrillingProcedure = -1056589686,
ImplementsProcedure = 226746938,
DWISVerb = -2051217317,
BelongsToClass = 1952041461,
HasEndPoint = 419389207,
HasPressureReferenceType = 99317560,
EndsHydraulicBranchDecomposition = -1908688017,
IsAHydraulicRepresentationFor = -74508805,
HasBranchComponent = 556402922,
HasBranchCoordinateSystem = 1546160721,
HasHydraulicState = 1621709956,
HasHydraulicStateValueFrom = -2090769090,
HasLeftBranchCoordinates = 1842337728,
HasRightBranchCoordinates = 497498889,
IsHydraulicallyLocatedAt = 1984002270,
IsEquivalentCirculationDensityAt = 740740816,
IsFluidDensityAt = -2023847215,
IsFluidTemperatureAt = -1160939753,
IsFluidVelocityAt = -1764735380,
IsOpeningRatioAt = -1791845099,
IsVolumeAt = -1951453291,
IsHydraulicEstimationAt = -915271701,
IsHydraulicMaximumAllowedRateOfChangeAt = -1794883491,
IsHydraulicMaximumAllowedValueAt = 1155675690,
IsHydraulicMeasurementAt = -39653362,
IsMassFlowRateAt = -1893112839,
IsPressureAt = -118050130,
IsPressureGradientAt = -646341514,
IsVolumetricFlowRateAt = 1885775008,
IsHydraulicConnectedTo = -1414126394,
HasEndJunction = -2014656964,
HasLeftBranch = -1754135735,
HasRightBranch = -1309871000,
HasStartJunction = 1458472464,
StartsHydraulicBranchDecomposition = -1876125967,
ConcernsAFluidComponent = 1430302547,
IsUpstreamOf = -940209168,
IsDownstreamOf = 1727734206,
IsOfMechanicalStiffnessType = 1178199102,
IsAMechanicalRepresentationFor = 904064847,
HasMechanicalState = 1097307349,
HasMechanicalStateValueFrom = -1922287299,
IsMechanicallyConnectedTo = 937596233,
IsMechanicallyLocatedAt = 999677541,
IsForMotionType = 1885791995,
HasMotionType = -772136779,
HasCoordinates = 1368659635,
HasReferenceFrame = 877367340,
HasReferenceFrameOrigin = -865654456,
IsPhysicallyLocatedAt = 419916275,
AssociatesMeasurableQuantity = 504678986,
AssociatesUnit = 2028604239,
HasUnitAssociation = -333988684,
HasMeasurableQuantity = 824977116,
IsOfBaseQuantity = 2042892479,
IsOfMeasurableQuantity = -1362120192,
IsUnitForQuantity = 1550395850,
HasSIUnit = 1651705936,
HasUnitOfMeasure = -1202937697,
BelongsToSynchronizationGroup = -1736981519,
HasAcquisitionClock = 1045488677,
HasSourceClock = -1372200659,
HasSourceTime = 2018714176,
HasAcquisitionTime = 1124642759,
HasTransmissionDelay = -677957365,
IsSynchronizationGroupInput = -398947252,
IsSynchronizationGroupOutput = 670072572,
HasTimeReference = 991983410,
HasUncertainty = 143034691,
HasUncertaintyAccuracy = -584542907,
HasUncertaintyPrecision = -2070056341,
HasUncertaintyMin = -1419520974,
HasUncertaintyMax = -643121184,
HasUncertaintyMean = -903463030,
HasUncertaintyStandardDeviation = -721606290,
HasProportionError = -176369185,
HasFullScale = 1373469365,
HasUncertaintyHistogram = 1460826234
}
	public const string IsEnablingSignalFor = "IsEnablingSignalFor";
	public const string IsActivatedSignalFor = "IsActivatedSignalFor";
	public const string AllowEnablementSignalFor = "AllowEnablementSignalFor";
	public const string IsIdlingSignalFor = "IsIdlingSignalFor";
	public const string IsUserControllableExtraMarginSignalFor = "IsUserControllableExtraMarginSignalFor";
	public const string IsUsedExtraMarginSignalFor = "IsUsedExtraMarginSignalFor";
	public const string IsArmedSignalFor = "IsArmedSignalFor";
	public const string IsAlertTriggeredSignalFor = "IsAlertTriggeredSignalFor";
	public const string IsAlarmTriggeredSignalFor = "IsAlarmTriggeredSignalFor";
	public const string IsInSafeModeSignalFor = "IsInSafeModeSignalFor";
	public const string IsImpactDescriptionSignalFor = "IsImpactDescriptionSignalFor";
	public const string IsFeatureSignalFor = "IsFeatureSignalFor";
	public const string IsRecommendedBy = "IsRecommendedBy";
	public const string IsRecommendedFor = "IsRecommendedFor";
	public const string HasControlLimit = "HasControlLimit";
	public const string IsCharacterizedBy = "IsCharacterizedBy";
	public const string HasOperationalStep = "HasOperationalStep";
	public const string IsAnActionOf = "IsAnActionOf";
	public const string IsATaskOf = "IsATaskOf";
	public const string IsAContextOf = "IsAContextOf";
	public const string IsDependentOn = "IsDependentOn";
	public const string IsObservableFrom = "IsObservableFrom";
	public const string HasPressureReference = "HasPressureReference";
	public const string HasTemperatureReference = "HasTemperatureReference";
	public const string HasElevationReference = "HasElevationReference";
	public const string Controls = "Controls";
	public const string HasFunction = "HasFunction";
	public const string IsCommandFor = "IsCommandFor";
	public const string IsComputationInput = "IsComputationInput";
	public const string IsLimitFor = "IsLimitFor";
	public const string IsMinimumLimitFor = "IsMinimumLimitFor";
	public const string IsMaximumLimitFor = "IsMaximumLimitFor";
	public const string IsCurrentStateFor = "IsCurrentStateFor";
	public const string IsInformationForCurrentStateOf = "IsInformationForCurrentStateOf";
	public const string IsInSafeModeStateFor = "IsInSafeModeStateFor";
	public const string IsSetPointFor = "IsSetPointFor";
	public const string IsSetPointRecommendationFor = "IsSetPointRecommendationFor";
	public const string IsSetPointAdviceFor = "IsSetPointAdviceFor";
	public const string IsSetPointMinimumRecommendationFor = "IsSetPointMinimumRecommendationFor";
	public const string IsSetPointMinimumAdviceFor = "IsSetPointMinimumAdviceFor";
	public const string IsSetPointMaximumRecommendationFor = "IsSetPointMaximumRecommendationFor";
	public const string IsSetPointMaximumAdviceFor = "IsSetPointMaximumAdviceFor";
	public const string IsTransformationInput = "IsTransformationInput";
	public const string IsBufferingInput = "IsBufferingInput";
	public const string IsDerivationInput = "IsDerivationInput";
	public const string IsResamplingInput = "IsResamplingInput";
	public const string IsTransmissionInput = "IsTransmissionInput";
	public const string IsGeneratedBy = "IsGeneratedBy";
	public const string IsComputedBy = "IsComputedBy";
	public const string IsMeasuredBy = "IsMeasuredBy";
	public const string IsRecordedFrom = "IsRecordedFrom";
	public const string IsTransformationOutput = "IsTransformationOutput";
	public const string IsBufferingOutput = "IsBufferingOutput";
	public const string IsDerivedFrom = "IsDerivedFrom";
	public const string IsIntegratedFrom = "IsIntegratedFrom";
	public const string IsResampledBy = "IsResampledBy";
	public const string IsTransmissionOutput = "IsTransmissionOutput";
	public const string IsProcessedBy = "IsProcessedBy";
	public const string IsProvidedBy = "IsProvidedBy";
	public const string IsProvidedTo = "IsProvidedTo";
	public const string IsTransmittedBy = "IsTransmittedBy";
	public const string IsConditionedBy = "IsConditionedBy";
	public const string IsConditionInput = "IsConditionInput";
	public const string IsConditionLeft = "IsConditionLeft";
	public const string IsConditionRight = "IsConditionRight";
	public const string IsValidBy = "IsValidBy";
	public const string HasDomain = "HasDomain";
	public const string HasTimeIntervalDomain = "HasTimeIntervalDomain";
	public const string HasValue = "HasValue";
	public const string HasDynamicValue = "HasDynamicValue";
	public const string HasStaticValue = "HasStaticValue";
	public const string IsToBeComparedWith = "IsToBeComparedWith";
	public const string IsToBeGreaterThan = "IsToBeGreaterThan";
	public const string IsToBeGreaterOrEqualThan = "IsToBeGreaterOrEqualThan";
	public const string IsToBeStrictlyGreaterThan = "IsToBeStrictlyGreaterThan";
	public const string IsToBeSmallerThan = "IsToBeSmallerThan";
	public const string IsToBeSmallerOrEqualThan = "IsToBeSmallerOrEqualThan";
	public const string IsToBeStrictlySmallerThan = "IsToBeStrictlySmallerThan";
	public const string IsToBeEqualTo = "IsToBeEqualTo";
	public const string IsToBeDifferentFrom = "IsToBeDifferentFrom";
	public const string IsSubPartOf = "IsSubPartOf";
	public const string AccountsFor = "AccountsFor";
	public const string IsRelatedToDrillingIncident = "IsRelatedToDrillingIncident";
	public const string ManagesIncident = "ManagesIncident";
	public const string IsRelatedToDrillingLimit = "IsRelatedToDrillingLimit";
	public const string ImplementsLimit = "ImplementsLimit";
	public const string IsRelatedToDrillingObjective = "IsRelatedToDrillingObjective";
	public const string ImplementsObjective = "ImplementsObjective";
	public const string IsRelatedToDrillingProcedure = "IsRelatedToDrillingProcedure";
	public const string ImplementsProcedure = "ImplementsProcedure";
	public const string DWISVerb = "DWISVerb";
	public const string BelongsToClass = "BelongsToClass";
	public const string HasEndPoint = "HasEndPoint";
	public const string HasPressureReferenceType = "HasPressureReferenceType";
	public const string EndsHydraulicBranchDecomposition = "EndsHydraulicBranchDecomposition";
	public const string IsAHydraulicRepresentationFor = "IsAHydraulicRepresentationFor";
	public const string HasBranchComponent = "HasBranchComponent";
	public const string HasBranchCoordinateSystem = "HasBranchCoordinateSystem";
	public const string HasHydraulicState = "HasHydraulicState";
	public const string HasHydraulicStateValueFrom = "HasHydraulicStateValueFrom";
	public const string HasLeftBranchCoordinates = "HasLeftBranchCoordinates";
	public const string HasRightBranchCoordinates = "HasRightBranchCoordinates";
	public const string IsHydraulicallyLocatedAt = "IsHydraulicallyLocatedAt";
	public const string IsEquivalentCirculationDensityAt = "IsEquivalentCirculationDensityAt";
	public const string IsFluidDensityAt = "IsFluidDensityAt";
	public const string IsFluidTemperatureAt = "IsFluidTemperatureAt";
	public const string IsFluidVelocityAt = "IsFluidVelocityAt";
	public const string IsOpeningRatioAt = "IsOpeningRatioAt";
	public const string IsVolumeAt = "IsVolumeAt";
	public const string IsHydraulicEstimationAt = "IsHydraulicEstimationAt";
	public const string IsHydraulicMaximumAllowedRateOfChangeAt = "IsHydraulicMaximumAllowedRateOfChangeAt";
	public const string IsHydraulicMaximumAllowedValueAt = "IsHydraulicMaximumAllowedValueAt";
	public const string IsHydraulicMeasurementAt = "IsHydraulicMeasurementAt";
	public const string IsMassFlowRateAt = "IsMassFlowRateAt";
	public const string IsPressureAt = "IsPressureAt";
	public const string IsPressureGradientAt = "IsPressureGradientAt";
	public const string IsVolumetricFlowRateAt = "IsVolumetricFlowRateAt";
	public const string IsHydraulicConnectedTo = "IsHydraulicConnectedTo";
	public const string HasEndJunction = "HasEndJunction";
	public const string HasLeftBranch = "HasLeftBranch";
	public const string HasRightBranch = "HasRightBranch";
	public const string HasStartJunction = "HasStartJunction";
	public const string StartsHydraulicBranchDecomposition = "StartsHydraulicBranchDecomposition";
	public const string ConcernsAFluidComponent = "ConcernsAFluidComponent";
	public const string IsUpstreamOf = "IsUpstreamOf";
	public const string IsDownstreamOf = "IsDownstreamOf";
	public const string IsOfMechanicalStiffnessType = "IsOfMechanicalStiffnessType";
	public const string IsAMechanicalRepresentationFor = "IsAMechanicalRepresentationFor";
	public const string HasMechanicalState = "HasMechanicalState";
	public const string HasMechanicalStateValueFrom = "HasMechanicalStateValueFrom";
	public const string IsMechanicallyConnectedTo = "IsMechanicallyConnectedTo";
	public const string IsMechanicallyLocatedAt = "IsMechanicallyLocatedAt";
	public const string IsForMotionType = "IsForMotionType";
	public const string HasMotionType = "HasMotionType";
	public const string HasCoordinates = "HasCoordinates";
	public const string HasReferenceFrame = "HasReferenceFrame";
	public const string HasReferenceFrameOrigin = "HasReferenceFrameOrigin";
	public const string IsPhysicallyLocatedAt = "IsPhysicallyLocatedAt";
	public const string AssociatesMeasurableQuantity = "AssociatesMeasurableQuantity";
	public const string AssociatesUnit = "AssociatesUnit";
	public const string HasUnitAssociation = "HasUnitAssociation";
	public const string HasMeasurableQuantity = "HasMeasurableQuantity";
	public const string IsOfBaseQuantity = "IsOfBaseQuantity";
	public const string IsOfMeasurableQuantity = "IsOfMeasurableQuantity";
	public const string IsUnitForQuantity = "IsUnitForQuantity";
	public const string HasSIUnit = "HasSIUnit";
	public const string HasUnitOfMeasure = "HasUnitOfMeasure";
	public const string BelongsToSynchronizationGroup = "BelongsToSynchronizationGroup";
	public const string HasAcquisitionClock = "HasAcquisitionClock";
	public const string HasSourceClock = "HasSourceClock";
	public const string HasSourceTime = "HasSourceTime";
	public const string HasAcquisitionTime = "HasAcquisitionTime";
	public const string HasTransmissionDelay = "HasTransmissionDelay";
	public const string IsSynchronizationGroupInput = "IsSynchronizationGroupInput";
	public const string IsSynchronizationGroupOutput = "IsSynchronizationGroupOutput";
	public const string HasTimeReference = "HasTimeReference";
	public const string HasUncertainty = "HasUncertainty";
	public const string HasUncertaintyAccuracy = "HasUncertaintyAccuracy";
	public const string HasUncertaintyPrecision = "HasUncertaintyPrecision";
	public const string HasUncertaintyMin = "HasUncertaintyMin";
	public const string HasUncertaintyMax = "HasUncertaintyMax";
	public const string HasUncertaintyMean = "HasUncertaintyMean";
	public const string HasUncertaintyStandardDeviation = "HasUncertaintyStandardDeviation";
	public const string HasProportionError = "HasProportionError";
	public const string HasFullScale = "HasFullScale";
	public const string HasUncertaintyHistogram = "HasUncertaintyHistogram";
}
}
