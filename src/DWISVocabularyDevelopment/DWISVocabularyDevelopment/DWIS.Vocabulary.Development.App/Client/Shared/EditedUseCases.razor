@using DWIS.Vocabulary.Development.App.Shared;
@inject IGitHubManager Manager;

<h1>Edited use cases</h1>

<table>
    @foreach(var u in _editedUseCases ?? new List<EditableUseCase>())
    {
    <tr>
        <td>@u.Path</td>
        <td @onclick="()=>Manager.CommitChanges(u)">Commit</td>
    </tr>
    }
</table>


@code {
    private List<EditableUseCase>? _editedUseCases;

    protected override Task OnInitializedAsync()
    {
        _editedUseCases = Manager.GetEditedUseCases();
        
        return base.OnInitializedAsync();
    }

}
